
- hosts: all
  max_fail_percentage: 0
  tags: preinstall
  roles:
    - { role: vicenteg.mapr_accounts }
    - { role: vicenteg.mapr_redhat_prereqs, when: ansible_os_family == 'RedHat' }
    - { role: vicenteg.redhat_timezone, when: ansible_os_family == 'RedHat' }
    - { role: vicenteg.mapr_debian_prereqs, when: ansible_os_family == 'Debian' }
    - { role: vicenteg.ntp }
    - { role: vicenteg.python_lxml }

- hosts: all
  max_fail_percentage: 0
  tags: validation
  roles:
    - { role: validation_prereqs }
    - { role: pre_install_validation }

- hosts: zookeeper
  max_fail_percentage: 0
  roles:
    - vicenteg.mapr_zookeeper

- hosts: cldb
  max_fail_percentage: 0
  roles:
    - vicenteg.mapr_cldb

- hosts: resourcemanager
  tags: mapr-core
  max_fail_percentage: 0
  roles:
    - { role: vicenteg.mapr_resourcemanager, when: yarn_enabled is defined and yarn_enabled == True and myriad_enabled != True }

- hosts: historyserver
  tags: mapr-core
  max_fail_percentage: 0
  roles:
    - { role: vicenteg.mapr_historyserver, when: yarn_enabled is defined and yarn_enabled == True and myriad_enabled != True }

- hosts: nodemanager
  tags: mapr-core
  max_fail_percentage: 0
  roles:
    - { role: vicenteg.mapr_nodemanager, when: yarn_enabled is defined and yarn_enabled == True and myriad_enabled != True }

- hosts: webserver
  tags: mapr-core
  roles:
    - vicenteg.mapr_webserver

- hosts: fileserver
  tags: mapr-core
  roles:
    - vicenteg.mapr_fileserver

- hosts: cluster
  tags: mapr-core
  roles:
    - { role: vicenteg.mapr_nfs, when: nfs_enabled is defined and nfs_enabled == True }
    - { role: vicenteg.mapr_posixclient, when: nfs_enabled is defined and nfs_enabled == False and posix_client_enabled is defined and posix_client_enabled == True }

- hosts: mesosmaster
  become: yes
  become_user: root
  max_fail_percentage: 0
  roles:
    - { role: vicenteg.mapr_mesos_master, when: mesos_enabled is defined and mesos_enabled == True }

- hosts: mesosmaster[0]
  become: yes
  become_user: root
  max_fail_percentage: 0
  roles:
    - { role: vicenteg.mapr_mesos_dns, when: mesos_enabled is defined and mesos_enabled == True }

- hosts: mesosslave
  become: yes
  become_user: root
  max_fail_percentage: 0
  roles:
    - { role: vicenteg.mapr_mesos_slave, when: mesos_enabled is defined and mesos_enabled == True }
    - { role: vicenteg.mapr_myriad, when: mesos_enabled is defined and mesos_enabled == True and myriad_enabled == True }


- hosts: cluster
  roles:
    - { role: vicenteg.mapr_hbasemaster, when: hbase_enabled }
    - { role: vicenteg.mapr_hbaseregionserver, when: hbase_enabled }

- hosts: edge
  tags: mapr-core
  roles:
    - { role: vicenteg.mapr_client }

- hosts: cluster
  tags: mapr-core
  tasks:
    - name: check for mapr-patch package
      command: yum list  mapr-patch
      failed_when: yum_list_mapr_patch.rc not in (0,1)
      changed_when: false
      register: yum_list_mapr_patch

    - name: install mapr-patch
      become: yes
      become_user: root
      yum: name=mapr-patch state=present
      environment: '{{proxy_env}}'
      when: yum_list_mapr_patch.rc == 0

- hosts: cluster
  tags: mapr-core
  tasks:
    - name: find hadoop version
      shell: rpm -qa --queryformat '%{VERSION} %{RELEASE}' mapr-hadoop-core | awk '{ print substr($0,0,5) }'
      register: hadoop_version
      changed_when: false

    - name: configure proxyuser groups
      hadoop_properties:
        create: True
        file: /opt/mapr/hadoop/hadoop-{{hadoop_version.stdout}}/etc/hadoop/core-site.xml
        name: hadoop.proxyuser.mapr.groups
        value: "*"
      become: yes
      become_user: root
#      when: secure_cluster is defined and secure_cluster == True

    - name: configure proxyuser hosts
      hadoop_properties:
        create: True
        file: /opt/mapr/hadoop/hadoop-{{hadoop_version.stdout}}/etc/hadoop/core-site.xml
        name: hadoop.proxyuser.mapr.hosts
        value: "*"
      become: yes
      become_user: root
#      when: secure_cluster is defined and secure_cluster == True

- hosts: all
  tags: mapr-core
  roles:
    - { role: vicenteg.mapr_configuration, tags: configuration }

- hosts: zookeeper
  tags: mapr-core
  roles:
    - { role: vicenteg.mapr_zookeeper_startup }

- hosts: cluster
  tags: mapr-core
  tasks:
    - name: tune MFS memory if memory is low
      become: yes
      become_user: root
      lineinfile: dest=/opt/mapr/conf/warden.conf regexp=service.command.mfs.heapsize.percent line=service.command.mfs.heapsize.percent=20 backup=yes
      when: ansible_memtotal_mb < 16384

    - name: tune MFS memory if memory is low
      become: yes
      become_user: root
      lineinfile: dest=/opt/mapr/conf/warden.conf regexp=service.command.mfs.heapsize.maxpercent line=service.command.mfs.heapsize.maxpercent=65 backup=yes
      when: ansible_memtotal_mb < 16384

- hosts: cldb
  tags: mapr-core
  roles:
    - { role: vicenteg.mapr_cldb_startup }

- hosts: cldb[0]
  become: yes
  become_user: mapr
  tags: mapr-core
  roles:
    - { role: vicenteg.mapr_maprlogin, when: secure_cluster is defined and secure_cluster == True }
  tasks:
    - name: set default desired replication to 1
      command: maprcli config save -values "{cldb.volumes.default.replication:1}"
      when: groups['cluster'] | length == 1

    - name: set default min replication to 1
      command: maprcli config save -values "{cldb.volumes.default.min.replication:1}"
      when: groups['cluster'] | length == 1

    - name: set replication to 1 if single node
      shell: maprcli volume list -columns volumename | grep -v volumename | awk '{print $1}' | xargs -n1 -I'{}' maprcli volume modify -name '{}' -replication 1 -minreplication 1
      when: groups['cluster'] | length == 1


- hosts: cluster
  tags: mapr-core
  roles:
    - { role: vicenteg.mapr_cluster_startup }

- hosts: cluster
  tags: mapr-core
  roles:
    - { role: vicenteg.mapr_license, when: license_file is defined and license_file != '' }

- hosts: mesosmaster
  roles:
    - { role: vicenteg.mapr_myriad_startup, when: myriad_enabled }

- hosts: hiveserver
  roles:
    - { role: vicenteg.mapr_hive, when: classic_enabled or yarn_enabled and hive_enabled is defined and hive_enabled == True }
    - { role: vicenteg.mapr_hive_test, tags: [ "test" ], when: classic_enabled or yarn_enabled and hive_enabled is defined and hive_enabled == True }

- hosts: cluster
  roles:
    - { role: vicenteg.mapr_pig, when: classic_enabled or yarn_enabled and pig_enabled is defined and pig_enabled == True }

- hosts: hue
  roles:
    - { role: vicenteg.mapr_httpfs, when: httpfs_enabled is defined and httpfs_enabled == True }

- hosts: cluster
  roles:
    - { role: vicenteg.mapr_solr, when: solr_enabled }

- hosts: oozie
  roles:
    - { role: vicenteg.mapr_oozie, when: classic_enabled or yarn_enabled and oozie_enabled is defined and oozie_enabled == True }

- hosts: hue
  roles:
    - { role: vicenteg.mapr-hue, when: hue_enabled is defined and hue_enabled == True }

- hosts: cluster
  roles:
    - { role: vicenteg.mapr_drill, tags: [ "drill" ], when: drill_enabled is defined and drill_enabled == True }
    - { role: vicenteg.mapr_drill_test, tags: [ "test" ], when: drill_enabled is defined and drill_enabled == True }

- hosts: spark_master
  become: yes
  roles:
    - { role: vicenteg.mapr_spark_master, when: spark_enabled is defined and spark_enabled and yarn_enabled is defined and yarn_enabled == False }

- hosts: spark_slave
  become: yes
  roles:
    - { role: vicenteg.mapr_spark_slave, when: spark_enabled is defined and spark_enabled }
    - { role: vicenteg.mapr_spark_test, tags: [ "test" ], when: spark_enabled is defined and spark_enabled and skip_tests == False }

- hosts: cluster
  become: yes
  roles:
    - { role: vicenteg.user_account, tags: [ "opentsdb" ], user: opentsdb, uid: 2147483631, group: opentsdb, gid: 2147483631, home: /home/opentsdb, when: opentsdb_enabled is defined and opentsdb_enabled == True }

- hosts: opentsdb
  become: yes
  roles:
    - { role: vicenteg.mapr_maprlogin_service, tags: [ "opentsdb" ], mapr_admin_username: mapr, maprlogin_username: "{{opentsdb_user}}", when: "secure_cluster is defined and secure_cluster == True and opentsdb_enabled is defined and opentsdb_enabled == True" }
    - { role: vicenteg.mapr_opentsdb, tags: [ "opentsdb" ], when: opentsdb_enabled is defined and opentsdb_enabled == True }

- hosts: cluster
  roles:
    - { role: vicenteg.mapr_tcollector, tags: [ "opentsdb" ], when: opentsdb_enabled is defined and opentsdb_enabled == True }

- hosts: kafka
  roles:
    - { role: vicenteg.mapr-kafka, when: kafka_enabled is defined and kafka_enabled == True }

- hosts: edge
  roles:
    - { role: vicenteg.mapr_maprlogin, when: secure_cluster is defined and secure_cluster == True }
    - { role: vicenteg.mapr_loopbacknfs, when: loopbacknfs_enabled is defined and loopbacknfs_enabled }
    - { role: vicenteg.mapr_posixclient, when: posix_client_enabled is defined and posix_client_enabled }
  tasks:
    - name: restart posix client
      become: yes
      become_user: root
      service: name=mapr-posix-client-{{posix_client_edition|default("basic")}} state=restarted

- hosts: edge:cluster
  become: yes
  become_user: mapr
  roles:
    - { role: vicenteg.mapr_post_install_test, tags: [ "test" ], when: skip_tests is defined and skip_tests == False }
